// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pathserver.proto

package pathserver;

public final class Pathserver {
  private Pathserver() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pathserver.State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **
     * x-coordinate of the robot.
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    double getX();

    /**
     * <pre>
     **
     * y-coordinate of the robot.
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    double getY();

    /**
     * <pre>
     **
     * orientation of the robot.
     * In radians. Measured counter-clockwise from the x-axis.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     */
    double getTheta();
  }
  /**
   * <pre>
   **
   * Message specifying the robot's state.
   * </pre>
   *
   * Protobuf type {@code pathserver.State}
   */
  public  static final class State extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pathserver.State)
      StateOrBuilder {
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private State() {
      x_ = 0D;
      y_ = 0D;
      theta_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              x_ = input.readDouble();
              break;
            }
            case 17: {

              y_ = input.readDouble();
              break;
            }
            case 25: {

              theta_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pathserver.Pathserver.internal_static_pathserver_State_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pathserver.Pathserver.internal_static_pathserver_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pathserver.Pathserver.State.class, pathserver.Pathserver.State.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <pre>
     **
     * x-coordinate of the robot.
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <pre>
     **
     * y-coordinate of the robot.
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    public double getY() {
      return y_;
    }

    public static final int THETA_FIELD_NUMBER = 3;
    private double theta_;
    /**
     * <pre>
     **
     * orientation of the robot.
     * In radians. Measured counter-clockwise from the x-axis.
     * </pre>
     *
     * <code>optional double theta = 3;</code>
     */
    public double getTheta() {
      return theta_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0D) {
        output.writeDouble(1, x_);
      }
      if (y_ != 0D) {
        output.writeDouble(2, y_);
      }
      if (theta_ != 0D) {
        output.writeDouble(3, theta_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (y_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (theta_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, theta_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pathserver.Pathserver.State)) {
        return super.equals(obj);
      }
      pathserver.Pathserver.State other = (pathserver.Pathserver.State) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getX())
          == java.lang.Double.doubleToLongBits(
              other.getX()));
      result = result && (
          java.lang.Double.doubleToLongBits(getY())
          == java.lang.Double.doubleToLongBits(
              other.getY()));
      result = result && (
          java.lang.Double.doubleToLongBits(getTheta())
          == java.lang.Double.doubleToLongBits(
              other.getTheta()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      hash = (37 * hash) + THETA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTheta()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pathserver.Pathserver.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pathserver.Pathserver.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Message specifying the robot's state.
     * </pre>
     *
     * Protobuf type {@code pathserver.State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pathserver.State)
        pathserver.Pathserver.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pathserver.Pathserver.internal_static_pathserver_State_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pathserver.Pathserver.internal_static_pathserver_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pathserver.Pathserver.State.class, pathserver.Pathserver.State.Builder.class);
      }

      // Construct using pathserver.Pathserver.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        x_ = 0D;

        y_ = 0D;

        theta_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pathserver.Pathserver.internal_static_pathserver_State_descriptor;
      }

      public pathserver.Pathserver.State getDefaultInstanceForType() {
        return pathserver.Pathserver.State.getDefaultInstance();
      }

      public pathserver.Pathserver.State build() {
        pathserver.Pathserver.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pathserver.Pathserver.State buildPartial() {
        pathserver.Pathserver.State result = new pathserver.Pathserver.State(this);
        result.x_ = x_;
        result.y_ = y_;
        result.theta_ = theta_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pathserver.Pathserver.State) {
          return mergeFrom((pathserver.Pathserver.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pathserver.Pathserver.State other) {
        if (other == pathserver.Pathserver.State.getDefaultInstance()) return this;
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        if (other.getTheta() != 0D) {
          setTheta(other.getTheta());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pathserver.Pathserver.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pathserver.Pathserver.State) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double x_ ;
      /**
       * <pre>
       **
       * x-coordinate of the robot.
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public double getX() {
        return x_;
      }
      /**
       * <pre>
       **
       * x-coordinate of the robot.
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public Builder setX(double value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * x-coordinate of the robot.
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public Builder clearX() {
        
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <pre>
       **
       * y-coordinate of the robot.
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public double getY() {
        return y_;
      }
      /**
       * <pre>
       **
       * y-coordinate of the robot.
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public Builder setY(double value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * y-coordinate of the robot.
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public Builder clearY() {
        
        y_ = 0D;
        onChanged();
        return this;
      }

      private double theta_ ;
      /**
       * <pre>
       **
       * orientation of the robot.
       * In radians. Measured counter-clockwise from the x-axis.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       */
      public double getTheta() {
        return theta_;
      }
      /**
       * <pre>
       **
       * orientation of the robot.
       * In radians. Measured counter-clockwise from the x-axis.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       */
      public Builder setTheta(double value) {
        
        theta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * orientation of the robot.
       * In radians. Measured counter-clockwise from the x-axis.
       * </pre>
       *
       * <code>optional double theta = 3;</code>
       */
      public Builder clearTheta() {
        
        theta_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:pathserver.State)
    }

    // @@protoc_insertion_point(class_scope:pathserver.State)
    private static final pathserver.Pathserver.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pathserver.Pathserver.State();
    }

    public static pathserver.Pathserver.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<State>
        PARSER = new com.google.protobuf.AbstractParser<State>() {
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new State(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<State> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    public pathserver.Pathserver.State getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlanRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pathserver.PlanRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    java.util.List<pathserver.Pathserver.PlanRequest.Obstacle> 
        getObstaclesList();
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    pathserver.Pathserver.PlanRequest.Obstacle getObstacles(int index);
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    int getObstaclesCount();
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    java.util.List<? extends pathserver.Pathserver.PlanRequest.ObstacleOrBuilder> 
        getObstaclesOrBuilderList();
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    pathserver.Pathserver.PlanRequest.ObstacleOrBuilder getObstaclesOrBuilder(
        int index);

    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    boolean hasCurrent();
    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    pathserver.Pathserver.State getCurrent();
    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    pathserver.Pathserver.StateOrBuilder getCurrentOrBuilder();

    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    boolean hasTarget();
    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    pathserver.Pathserver.State getTarget();
    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    pathserver.Pathserver.StateOrBuilder getTargetOrBuilder();
  }
  /**
   * Protobuf type {@code pathserver.PlanRequest}
   */
  public  static final class PlanRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pathserver.PlanRequest)
      PlanRequestOrBuilder {
    // Use PlanRequest.newBuilder() to construct.
    private PlanRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlanRequest() {
      obstacles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlanRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                obstacles_ = new java.util.ArrayList<pathserver.Pathserver.PlanRequest.Obstacle>();
                mutable_bitField0_ |= 0x00000001;
              }
              obstacles_.add(
                  input.readMessage(pathserver.Pathserver.PlanRequest.Obstacle.parser(), extensionRegistry));
              break;
            }
            case 18: {
              pathserver.Pathserver.State.Builder subBuilder = null;
              if (current_ != null) {
                subBuilder = current_.toBuilder();
              }
              current_ = input.readMessage(pathserver.Pathserver.State.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(current_);
                current_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              pathserver.Pathserver.State.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(pathserver.Pathserver.State.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          obstacles_ = java.util.Collections.unmodifiableList(obstacles_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pathserver.Pathserver.internal_static_pathserver_PlanRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pathserver.Pathserver.internal_static_pathserver_PlanRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pathserver.Pathserver.PlanRequest.class, pathserver.Pathserver.PlanRequest.Builder.class);
    }

    public interface ObstacleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pathserver.PlanRequest.Obstacle)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       **
       * x grid-position of obstacle.
       * </pre>
       *
       * <code>optional int32 x = 1;</code>
       */
      int getX();

      /**
       * <pre>
       **
       * y grid-position of obstacle.
       * </pre>
       *
       * <code>optional int32 y = 2;</code>
       */
      int getY();
    }
    /**
     * <pre>
     **
     * Message specifying an obstacle's position.
     * </pre>
     *
     * Protobuf type {@code pathserver.PlanRequest.Obstacle}
     */
    public  static final class Obstacle extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:pathserver.PlanRequest.Obstacle)
        ObstacleOrBuilder {
      // Use Obstacle.newBuilder() to construct.
      private Obstacle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Obstacle() {
        x_ = 0;
        y_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Obstacle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                x_ = input.readInt32();
                break;
              }
              case 16: {

                y_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pathserver.Pathserver.internal_static_pathserver_PlanRequest_Obstacle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pathserver.Pathserver.internal_static_pathserver_PlanRequest_Obstacle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pathserver.Pathserver.PlanRequest.Obstacle.class, pathserver.Pathserver.PlanRequest.Obstacle.Builder.class);
      }

      public static final int X_FIELD_NUMBER = 1;
      private int x_;
      /**
       * <pre>
       **
       * x grid-position of obstacle.
       * </pre>
       *
       * <code>optional int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private int y_;
      /**
       * <pre>
       **
       * y grid-position of obstacle.
       * </pre>
       *
       * <code>optional int32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (x_ != 0) {
          output.writeInt32(1, x_);
        }
        if (y_ != 0) {
          output.writeInt32(2, y_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (x_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, x_);
        }
        if (y_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, y_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof pathserver.Pathserver.PlanRequest.Obstacle)) {
          return super.equals(obj);
        }
        pathserver.Pathserver.PlanRequest.Obstacle other = (pathserver.Pathserver.PlanRequest.Obstacle) obj;

        boolean result = true;
        result = result && (getX()
            == other.getX());
        result = result && (getY()
            == other.getY());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanRequest.Obstacle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(pathserver.Pathserver.PlanRequest.Obstacle prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       **
       * Message specifying an obstacle's position.
       * </pre>
       *
       * Protobuf type {@code pathserver.PlanRequest.Obstacle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pathserver.PlanRequest.Obstacle)
          pathserver.Pathserver.PlanRequest.ObstacleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pathserver.Pathserver.internal_static_pathserver_PlanRequest_Obstacle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pathserver.Pathserver.internal_static_pathserver_PlanRequest_Obstacle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pathserver.Pathserver.PlanRequest.Obstacle.class, pathserver.Pathserver.PlanRequest.Obstacle.Builder.class);
        }

        // Construct using pathserver.Pathserver.PlanRequest.Obstacle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          x_ = 0;

          y_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pathserver.Pathserver.internal_static_pathserver_PlanRequest_Obstacle_descriptor;
        }

        public pathserver.Pathserver.PlanRequest.Obstacle getDefaultInstanceForType() {
          return pathserver.Pathserver.PlanRequest.Obstacle.getDefaultInstance();
        }

        public pathserver.Pathserver.PlanRequest.Obstacle build() {
          pathserver.Pathserver.PlanRequest.Obstacle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pathserver.Pathserver.PlanRequest.Obstacle buildPartial() {
          pathserver.Pathserver.PlanRequest.Obstacle result = new pathserver.Pathserver.PlanRequest.Obstacle(this);
          result.x_ = x_;
          result.y_ = y_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pathserver.Pathserver.PlanRequest.Obstacle) {
            return mergeFrom((pathserver.Pathserver.PlanRequest.Obstacle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pathserver.Pathserver.PlanRequest.Obstacle other) {
          if (other == pathserver.Pathserver.PlanRequest.Obstacle.getDefaultInstance()) return this;
          if (other.getX() != 0) {
            setX(other.getX());
          }
          if (other.getY() != 0) {
            setY(other.getY());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pathserver.Pathserver.PlanRequest.Obstacle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pathserver.Pathserver.PlanRequest.Obstacle) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int x_ ;
        /**
         * <pre>
         **
         * x grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 x = 1;</code>
         */
        public int getX() {
          return x_;
        }
        /**
         * <pre>
         **
         * x grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 x = 1;</code>
         */
        public Builder setX(int value) {
          
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         **
         * x grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 x = 1;</code>
         */
        public Builder clearX() {
          
          x_ = 0;
          onChanged();
          return this;
        }

        private int y_ ;
        /**
         * <pre>
         **
         * y grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 y = 2;</code>
         */
        public int getY() {
          return y_;
        }
        /**
         * <pre>
         **
         * y grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 y = 2;</code>
         */
        public Builder setY(int value) {
          
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         **
         * y grid-position of obstacle.
         * </pre>
         *
         * <code>optional int32 y = 2;</code>
         */
        public Builder clearY() {
          
          y_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:pathserver.PlanRequest.Obstacle)
      }

      // @@protoc_insertion_point(class_scope:pathserver.PlanRequest.Obstacle)
      private static final pathserver.Pathserver.PlanRequest.Obstacle DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new pathserver.Pathserver.PlanRequest.Obstacle();
      }

      public static pathserver.Pathserver.PlanRequest.Obstacle getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Obstacle>
          PARSER = new com.google.protobuf.AbstractParser<Obstacle>() {
        public Obstacle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Obstacle(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Obstacle> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Obstacle> getParserForType() {
        return PARSER;
      }

      public pathserver.Pathserver.PlanRequest.Obstacle getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OBSTACLES_FIELD_NUMBER = 1;
    private java.util.List<pathserver.Pathserver.PlanRequest.Obstacle> obstacles_;
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    public java.util.List<pathserver.Pathserver.PlanRequest.Obstacle> getObstaclesList() {
      return obstacles_;
    }
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    public java.util.List<? extends pathserver.Pathserver.PlanRequest.ObstacleOrBuilder> 
        getObstaclesOrBuilderList() {
      return obstacles_;
    }
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    public int getObstaclesCount() {
      return obstacles_.size();
    }
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    public pathserver.Pathserver.PlanRequest.Obstacle getObstacles(int index) {
      return obstacles_.get(index);
    }
    /**
     * <pre>
     **
     * Obstacles to avoid.
     * </pre>
     *
     * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
     */
    public pathserver.Pathserver.PlanRequest.ObstacleOrBuilder getObstaclesOrBuilder(
        int index) {
      return obstacles_.get(index);
    }

    public static final int CURRENT_FIELD_NUMBER = 2;
    private pathserver.Pathserver.State current_;
    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    public boolean hasCurrent() {
      return current_ != null;
    }
    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    public pathserver.Pathserver.State getCurrent() {
      return current_ == null ? pathserver.Pathserver.State.getDefaultInstance() : current_;
    }
    /**
     * <pre>
     **
     * Current state.
     * </pre>
     *
     * <code>optional .pathserver.State current = 2;</code>
     */
    public pathserver.Pathserver.StateOrBuilder getCurrentOrBuilder() {
      return getCurrent();
    }

    public static final int TARGET_FIELD_NUMBER = 3;
    private pathserver.Pathserver.State target_;
    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    public pathserver.Pathserver.State getTarget() {
      return target_ == null ? pathserver.Pathserver.State.getDefaultInstance() : target_;
    }
    /**
     * <pre>
     **
     * Target state.
     * </pre>
     *
     * <code>optional .pathserver.State target = 3;</code>
     */
    public pathserver.Pathserver.StateOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < obstacles_.size(); i++) {
        output.writeMessage(1, obstacles_.get(i));
      }
      if (current_ != null) {
        output.writeMessage(2, getCurrent());
      }
      if (target_ != null) {
        output.writeMessage(3, getTarget());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < obstacles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, obstacles_.get(i));
      }
      if (current_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCurrent());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTarget());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pathserver.Pathserver.PlanRequest)) {
        return super.equals(obj);
      }
      pathserver.Pathserver.PlanRequest other = (pathserver.Pathserver.PlanRequest) obj;

      boolean result = true;
      result = result && getObstaclesList()
          .equals(other.getObstaclesList());
      result = result && (hasCurrent() == other.hasCurrent());
      if (hasCurrent()) {
        result = result && getCurrent()
            .equals(other.getCurrent());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget()
            .equals(other.getTarget());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getObstaclesCount() > 0) {
        hash = (37 * hash) + OBSTACLES_FIELD_NUMBER;
        hash = (53 * hash) + getObstaclesList().hashCode();
      }
      if (hasCurrent()) {
        hash = (37 * hash) + CURRENT_FIELD_NUMBER;
        hash = (53 * hash) + getCurrent().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pathserver.Pathserver.PlanRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pathserver.Pathserver.PlanRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pathserver.PlanRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pathserver.PlanRequest)
        pathserver.Pathserver.PlanRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pathserver.Pathserver.internal_static_pathserver_PlanRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pathserver.Pathserver.internal_static_pathserver_PlanRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pathserver.Pathserver.PlanRequest.class, pathserver.Pathserver.PlanRequest.Builder.class);
      }

      // Construct using pathserver.Pathserver.PlanRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getObstaclesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (obstaclesBuilder_ == null) {
          obstacles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          obstaclesBuilder_.clear();
        }
        if (currentBuilder_ == null) {
          current_ = null;
        } else {
          current_ = null;
          currentBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pathserver.Pathserver.internal_static_pathserver_PlanRequest_descriptor;
      }

      public pathserver.Pathserver.PlanRequest getDefaultInstanceForType() {
        return pathserver.Pathserver.PlanRequest.getDefaultInstance();
      }

      public pathserver.Pathserver.PlanRequest build() {
        pathserver.Pathserver.PlanRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pathserver.Pathserver.PlanRequest buildPartial() {
        pathserver.Pathserver.PlanRequest result = new pathserver.Pathserver.PlanRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (obstaclesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            obstacles_ = java.util.Collections.unmodifiableList(obstacles_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.obstacles_ = obstacles_;
        } else {
          result.obstacles_ = obstaclesBuilder_.build();
        }
        if (currentBuilder_ == null) {
          result.current_ = current_;
        } else {
          result.current_ = currentBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pathserver.Pathserver.PlanRequest) {
          return mergeFrom((pathserver.Pathserver.PlanRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pathserver.Pathserver.PlanRequest other) {
        if (other == pathserver.Pathserver.PlanRequest.getDefaultInstance()) return this;
        if (obstaclesBuilder_ == null) {
          if (!other.obstacles_.isEmpty()) {
            if (obstacles_.isEmpty()) {
              obstacles_ = other.obstacles_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObstaclesIsMutable();
              obstacles_.addAll(other.obstacles_);
            }
            onChanged();
          }
        } else {
          if (!other.obstacles_.isEmpty()) {
            if (obstaclesBuilder_.isEmpty()) {
              obstaclesBuilder_.dispose();
              obstaclesBuilder_ = null;
              obstacles_ = other.obstacles_;
              bitField0_ = (bitField0_ & ~0x00000001);
              obstaclesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObstaclesFieldBuilder() : null;
            } else {
              obstaclesBuilder_.addAllMessages(other.obstacles_);
            }
          }
        }
        if (other.hasCurrent()) {
          mergeCurrent(other.getCurrent());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pathserver.Pathserver.PlanRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pathserver.Pathserver.PlanRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pathserver.Pathserver.PlanRequest.Obstacle> obstacles_ =
        java.util.Collections.emptyList();
      private void ensureObstaclesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          obstacles_ = new java.util.ArrayList<pathserver.Pathserver.PlanRequest.Obstacle>(obstacles_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.PlanRequest.Obstacle, pathserver.Pathserver.PlanRequest.Obstacle.Builder, pathserver.Pathserver.PlanRequest.ObstacleOrBuilder> obstaclesBuilder_;

      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public java.util.List<pathserver.Pathserver.PlanRequest.Obstacle> getObstaclesList() {
        if (obstaclesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(obstacles_);
        } else {
          return obstaclesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public int getObstaclesCount() {
        if (obstaclesBuilder_ == null) {
          return obstacles_.size();
        } else {
          return obstaclesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public pathserver.Pathserver.PlanRequest.Obstacle getObstacles(int index) {
        if (obstaclesBuilder_ == null) {
          return obstacles_.get(index);
        } else {
          return obstaclesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder setObstacles(
          int index, pathserver.Pathserver.PlanRequest.Obstacle value) {
        if (obstaclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObstaclesIsMutable();
          obstacles_.set(index, value);
          onChanged();
        } else {
          obstaclesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder setObstacles(
          int index, pathserver.Pathserver.PlanRequest.Obstacle.Builder builderForValue) {
        if (obstaclesBuilder_ == null) {
          ensureObstaclesIsMutable();
          obstacles_.set(index, builderForValue.build());
          onChanged();
        } else {
          obstaclesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder addObstacles(pathserver.Pathserver.PlanRequest.Obstacle value) {
        if (obstaclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObstaclesIsMutable();
          obstacles_.add(value);
          onChanged();
        } else {
          obstaclesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder addObstacles(
          int index, pathserver.Pathserver.PlanRequest.Obstacle value) {
        if (obstaclesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObstaclesIsMutable();
          obstacles_.add(index, value);
          onChanged();
        } else {
          obstaclesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder addObstacles(
          pathserver.Pathserver.PlanRequest.Obstacle.Builder builderForValue) {
        if (obstaclesBuilder_ == null) {
          ensureObstaclesIsMutable();
          obstacles_.add(builderForValue.build());
          onChanged();
        } else {
          obstaclesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder addObstacles(
          int index, pathserver.Pathserver.PlanRequest.Obstacle.Builder builderForValue) {
        if (obstaclesBuilder_ == null) {
          ensureObstaclesIsMutable();
          obstacles_.add(index, builderForValue.build());
          onChanged();
        } else {
          obstaclesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder addAllObstacles(
          java.lang.Iterable<? extends pathserver.Pathserver.PlanRequest.Obstacle> values) {
        if (obstaclesBuilder_ == null) {
          ensureObstaclesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, obstacles_);
          onChanged();
        } else {
          obstaclesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder clearObstacles() {
        if (obstaclesBuilder_ == null) {
          obstacles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          obstaclesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public Builder removeObstacles(int index) {
        if (obstaclesBuilder_ == null) {
          ensureObstaclesIsMutable();
          obstacles_.remove(index);
          onChanged();
        } else {
          obstaclesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public pathserver.Pathserver.PlanRequest.Obstacle.Builder getObstaclesBuilder(
          int index) {
        return getObstaclesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public pathserver.Pathserver.PlanRequest.ObstacleOrBuilder getObstaclesOrBuilder(
          int index) {
        if (obstaclesBuilder_ == null) {
          return obstacles_.get(index);  } else {
          return obstaclesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public java.util.List<? extends pathserver.Pathserver.PlanRequest.ObstacleOrBuilder> 
           getObstaclesOrBuilderList() {
        if (obstaclesBuilder_ != null) {
          return obstaclesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(obstacles_);
        }
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public pathserver.Pathserver.PlanRequest.Obstacle.Builder addObstaclesBuilder() {
        return getObstaclesFieldBuilder().addBuilder(
            pathserver.Pathserver.PlanRequest.Obstacle.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public pathserver.Pathserver.PlanRequest.Obstacle.Builder addObstaclesBuilder(
          int index) {
        return getObstaclesFieldBuilder().addBuilder(
            index, pathserver.Pathserver.PlanRequest.Obstacle.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Obstacles to avoid.
       * </pre>
       *
       * <code>repeated .pathserver.PlanRequest.Obstacle obstacles = 1;</code>
       */
      public java.util.List<pathserver.Pathserver.PlanRequest.Obstacle.Builder> 
           getObstaclesBuilderList() {
        return getObstaclesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.PlanRequest.Obstacle, pathserver.Pathserver.PlanRequest.Obstacle.Builder, pathserver.Pathserver.PlanRequest.ObstacleOrBuilder> 
          getObstaclesFieldBuilder() {
        if (obstaclesBuilder_ == null) {
          obstaclesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pathserver.Pathserver.PlanRequest.Obstacle, pathserver.Pathserver.PlanRequest.Obstacle.Builder, pathserver.Pathserver.PlanRequest.ObstacleOrBuilder>(
                  obstacles_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          obstacles_ = null;
        }
        return obstaclesBuilder_;
      }

      private pathserver.Pathserver.State current_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> currentBuilder_;
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public boolean hasCurrent() {
        return currentBuilder_ != null || current_ != null;
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public pathserver.Pathserver.State getCurrent() {
        if (currentBuilder_ == null) {
          return current_ == null ? pathserver.Pathserver.State.getDefaultInstance() : current_;
        } else {
          return currentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public Builder setCurrent(pathserver.Pathserver.State value) {
        if (currentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          current_ = value;
          onChanged();
        } else {
          currentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public Builder setCurrent(
          pathserver.Pathserver.State.Builder builderForValue) {
        if (currentBuilder_ == null) {
          current_ = builderForValue.build();
          onChanged();
        } else {
          currentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public Builder mergeCurrent(pathserver.Pathserver.State value) {
        if (currentBuilder_ == null) {
          if (current_ != null) {
            current_ =
              pathserver.Pathserver.State.newBuilder(current_).mergeFrom(value).buildPartial();
          } else {
            current_ = value;
          }
          onChanged();
        } else {
          currentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public Builder clearCurrent() {
        if (currentBuilder_ == null) {
          current_ = null;
          onChanged();
        } else {
          current_ = null;
          currentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public pathserver.Pathserver.State.Builder getCurrentBuilder() {
        
        onChanged();
        return getCurrentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      public pathserver.Pathserver.StateOrBuilder getCurrentOrBuilder() {
        if (currentBuilder_ != null) {
          return currentBuilder_.getMessageOrBuilder();
        } else {
          return current_ == null ?
              pathserver.Pathserver.State.getDefaultInstance() : current_;
        }
      }
      /**
       * <pre>
       **
       * Current state.
       * </pre>
       *
       * <code>optional .pathserver.State current = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> 
          getCurrentFieldBuilder() {
        if (currentBuilder_ == null) {
          currentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder>(
                  getCurrent(),
                  getParentForChildren(),
                  isClean());
          current_ = null;
        }
        return currentBuilder_;
      }

      private pathserver.Pathserver.State target_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> targetBuilder_;
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public pathserver.Pathserver.State getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? pathserver.Pathserver.State.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public Builder setTarget(pathserver.Pathserver.State value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public Builder setTarget(
          pathserver.Pathserver.State.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public Builder mergeTarget(pathserver.Pathserver.State value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              pathserver.Pathserver.State.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public pathserver.Pathserver.State.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      public pathserver.Pathserver.StateOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              pathserver.Pathserver.State.getDefaultInstance() : target_;
        }
      }
      /**
       * <pre>
       **
       * Target state.
       * </pre>
       *
       * <code>optional .pathserver.State target = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:pathserver.PlanRequest)
    }

    // @@protoc_insertion_point(class_scope:pathserver.PlanRequest)
    private static final pathserver.Pathserver.PlanRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pathserver.Pathserver.PlanRequest();
    }

    public static pathserver.Pathserver.PlanRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlanRequest>
        PARSER = new com.google.protobuf.AbstractParser<PlanRequest>() {
      public PlanRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlanRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlanRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlanRequest> getParserForType() {
      return PARSER;
    }

    public pathserver.Pathserver.PlanRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlanReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pathserver.PlanReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    java.util.List<pathserver.Pathserver.PlanReply.Move> 
        getMovesList();
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    pathserver.Pathserver.PlanReply.Move getMoves(int index);
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    int getMovesCount();
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    java.util.List<? extends pathserver.Pathserver.PlanReply.MoveOrBuilder> 
        getMovesOrBuilderList();
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    pathserver.Pathserver.PlanReply.MoveOrBuilder getMovesOrBuilder(
        int index);

    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    java.util.List<pathserver.Pathserver.State> 
        getWaypointsList();
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    pathserver.Pathserver.State getWaypoints(int index);
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    int getWaypointsCount();
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    java.util.List<? extends pathserver.Pathserver.StateOrBuilder> 
        getWaypointsOrBuilderList();
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    pathserver.Pathserver.StateOrBuilder getWaypointsOrBuilder(
        int index);
  }
  /**
   * <pre>
   **
   * Message containing the planning result.
   * </pre>
   *
   * Protobuf type {@code pathserver.PlanReply}
   */
  public  static final class PlanReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pathserver.PlanReply)
      PlanReplyOrBuilder {
    // Use PlanReply.newBuilder() to construct.
    private PlanReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlanReply() {
      moves_ = java.util.Collections.emptyList();
      waypoints_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PlanReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                moves_ = new java.util.ArrayList<pathserver.Pathserver.PlanReply.Move>();
                mutable_bitField0_ |= 0x00000001;
              }
              moves_.add(
                  input.readMessage(pathserver.Pathserver.PlanReply.Move.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                waypoints_ = new java.util.ArrayList<pathserver.Pathserver.State>();
                mutable_bitField0_ |= 0x00000002;
              }
              waypoints_.add(
                  input.readMessage(pathserver.Pathserver.State.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          moves_ = java.util.Collections.unmodifiableList(moves_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          waypoints_ = java.util.Collections.unmodifiableList(waypoints_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pathserver.Pathserver.internal_static_pathserver_PlanReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pathserver.Pathserver.internal_static_pathserver_PlanReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pathserver.Pathserver.PlanReply.class, pathserver.Pathserver.PlanReply.Builder.class);
    }

    public interface MoveOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pathserver.PlanReply.Move)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
       */
      int getDirectionValue();
      /**
       * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
       */
      pathserver.Pathserver.PlanReply.Move.Direction getDirection();

      /**
       * <pre>
       **
       * Distance that the move should be executed for.
       * In units of metres. A negative distance does not imply that a
       * left turn should switch to a right turn. It only indicates that
       * the robot should reverse.
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       */
      double getDistance();
    }
    /**
     * <pre>
     **
     * Message represnting a single move to be executed by the robot.
     * </pre>
     *
     * Protobuf type {@code pathserver.PlanReply.Move}
     */
    public  static final class Move extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:pathserver.PlanReply.Move)
        MoveOrBuilder {
      // Use Move.newBuilder() to construct.
      private Move(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Move() {
        direction_ = 0;
        distance_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Move(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                direction_ = rawValue;
                break;
              }
              case 17: {

                distance_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pathserver.Pathserver.internal_static_pathserver_PlanReply_Move_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pathserver.Pathserver.internal_static_pathserver_PlanReply_Move_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pathserver.Pathserver.PlanReply.Move.class, pathserver.Pathserver.PlanReply.Move.Builder.class);
      }

      /**
       * <pre>
       **
       * Direction that the move should proceed in.
       * </pre>
       *
       * Protobuf enum {@code pathserver.PlanReply.Move.Direction}
       */
      public enum Direction
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Turning centre on the left.
         * </pre>
         *
         * <code>LEFT = 0;</code>
         */
        LEFT(0),
        /**
         * <pre>
         * No turning centre.
         * </pre>
         *
         * <code>STRAIGHT = 1;</code>
         */
        STRAIGHT(1),
        /**
         * <pre>
         * Turning centre on the right.
         * </pre>
         *
         * <code>RIGHT = 2;</code>
         */
        RIGHT(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Turning centre on the left.
         * </pre>
         *
         * <code>LEFT = 0;</code>
         */
        public static final int LEFT_VALUE = 0;
        /**
         * <pre>
         * No turning centre.
         * </pre>
         *
         * <code>STRAIGHT = 1;</code>
         */
        public static final int STRAIGHT_VALUE = 1;
        /**
         * <pre>
         * Turning centre on the right.
         * </pre>
         *
         * <code>RIGHT = 2;</code>
         */
        public static final int RIGHT_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Direction valueOf(int value) {
          return forNumber(value);
        }

        public static Direction forNumber(int value) {
          switch (value) {
            case 0: return LEFT;
            case 1: return STRAIGHT;
            case 2: return RIGHT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Direction>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Direction> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
                public Direction findValueByNumber(int number) {
                  return Direction.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return pathserver.Pathserver.PlanReply.Move.getDescriptor().getEnumTypes().get(0);
        }

        private static final Direction[] VALUES = values();

        public static Direction valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Direction(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:pathserver.PlanReply.Move.Direction)
      }

      public static final int DIRECTION_FIELD_NUMBER = 1;
      private int direction_;
      /**
       * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
       */
      public int getDirectionValue() {
        return direction_;
      }
      /**
       * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.Move.Direction getDirection() {
        pathserver.Pathserver.PlanReply.Move.Direction result = pathserver.Pathserver.PlanReply.Move.Direction.valueOf(direction_);
        return result == null ? pathserver.Pathserver.PlanReply.Move.Direction.UNRECOGNIZED : result;
      }

      public static final int DISTANCE_FIELD_NUMBER = 2;
      private double distance_;
      /**
       * <pre>
       **
       * Distance that the move should be executed for.
       * In units of metres. A negative distance does not imply that a
       * left turn should switch to a right turn. It only indicates that
       * the robot should reverse.
       * </pre>
       *
       * <code>optional double distance = 2;</code>
       */
      public double getDistance() {
        return distance_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (direction_ != pathserver.Pathserver.PlanReply.Move.Direction.LEFT.getNumber()) {
          output.writeEnum(1, direction_);
        }
        if (distance_ != 0D) {
          output.writeDouble(2, distance_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (direction_ != pathserver.Pathserver.PlanReply.Move.Direction.LEFT.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, direction_);
        }
        if (distance_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, distance_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof pathserver.Pathserver.PlanReply.Move)) {
          return super.equals(obj);
        }
        pathserver.Pathserver.PlanReply.Move other = (pathserver.Pathserver.PlanReply.Move) obj;

        boolean result = true;
        result = result && direction_ == other.direction_;
        result = result && (
            java.lang.Double.doubleToLongBits(getDistance())
            == java.lang.Double.doubleToLongBits(
                other.getDistance()));
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + direction_;
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDistance()));
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanReply.Move parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanReply.Move parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static pathserver.Pathserver.PlanReply.Move parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(pathserver.Pathserver.PlanReply.Move prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       **
       * Message represnting a single move to be executed by the robot.
       * </pre>
       *
       * Protobuf type {@code pathserver.PlanReply.Move}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pathserver.PlanReply.Move)
          pathserver.Pathserver.PlanReply.MoveOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pathserver.Pathserver.internal_static_pathserver_PlanReply_Move_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pathserver.Pathserver.internal_static_pathserver_PlanReply_Move_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pathserver.Pathserver.PlanReply.Move.class, pathserver.Pathserver.PlanReply.Move.Builder.class);
        }

        // Construct using pathserver.Pathserver.PlanReply.Move.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          direction_ = 0;

          distance_ = 0D;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pathserver.Pathserver.internal_static_pathserver_PlanReply_Move_descriptor;
        }

        public pathserver.Pathserver.PlanReply.Move getDefaultInstanceForType() {
          return pathserver.Pathserver.PlanReply.Move.getDefaultInstance();
        }

        public pathserver.Pathserver.PlanReply.Move build() {
          pathserver.Pathserver.PlanReply.Move result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pathserver.Pathserver.PlanReply.Move buildPartial() {
          pathserver.Pathserver.PlanReply.Move result = new pathserver.Pathserver.PlanReply.Move(this);
          result.direction_ = direction_;
          result.distance_ = distance_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pathserver.Pathserver.PlanReply.Move) {
            return mergeFrom((pathserver.Pathserver.PlanReply.Move)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pathserver.Pathserver.PlanReply.Move other) {
          if (other == pathserver.Pathserver.PlanReply.Move.getDefaultInstance()) return this;
          if (other.direction_ != 0) {
            setDirectionValue(other.getDirectionValue());
          }
          if (other.getDistance() != 0D) {
            setDistance(other.getDistance());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pathserver.Pathserver.PlanReply.Move parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pathserver.Pathserver.PlanReply.Move) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int direction_ = 0;
        /**
         * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
         */
        public int getDirectionValue() {
          return direction_;
        }
        /**
         * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
         */
        public Builder setDirectionValue(int value) {
          direction_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
         */
        public pathserver.Pathserver.PlanReply.Move.Direction getDirection() {
          pathserver.Pathserver.PlanReply.Move.Direction result = pathserver.Pathserver.PlanReply.Move.Direction.valueOf(direction_);
          return result == null ? pathserver.Pathserver.PlanReply.Move.Direction.UNRECOGNIZED : result;
        }
        /**
         * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
         */
        public Builder setDirection(pathserver.Pathserver.PlanReply.Move.Direction value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          direction_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .pathserver.PlanReply.Move.Direction direction = 1;</code>
         */
        public Builder clearDirection() {
          
          direction_ = 0;
          onChanged();
          return this;
        }

        private double distance_ ;
        /**
         * <pre>
         **
         * Distance that the move should be executed for.
         * In units of metres. A negative distance does not imply that a
         * left turn should switch to a right turn. It only indicates that
         * the robot should reverse.
         * </pre>
         *
         * <code>optional double distance = 2;</code>
         */
        public double getDistance() {
          return distance_;
        }
        /**
         * <pre>
         **
         * Distance that the move should be executed for.
         * In units of metres. A negative distance does not imply that a
         * left turn should switch to a right turn. It only indicates that
         * the robot should reverse.
         * </pre>
         *
         * <code>optional double distance = 2;</code>
         */
        public Builder setDistance(double value) {
          
          distance_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         **
         * Distance that the move should be executed for.
         * In units of metres. A negative distance does not imply that a
         * left turn should switch to a right turn. It only indicates that
         * the robot should reverse.
         * </pre>
         *
         * <code>optional double distance = 2;</code>
         */
        public Builder clearDistance() {
          
          distance_ = 0D;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:pathserver.PlanReply.Move)
      }

      // @@protoc_insertion_point(class_scope:pathserver.PlanReply.Move)
      private static final pathserver.Pathserver.PlanReply.Move DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new pathserver.Pathserver.PlanReply.Move();
      }

      public static pathserver.Pathserver.PlanReply.Move getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Move>
          PARSER = new com.google.protobuf.AbstractParser<Move>() {
        public Move parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Move(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Move> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Move> getParserForType() {
        return PARSER;
      }

      public pathserver.Pathserver.PlanReply.Move getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MOVES_FIELD_NUMBER = 1;
    private java.util.List<pathserver.Pathserver.PlanReply.Move> moves_;
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    public java.util.List<pathserver.Pathserver.PlanReply.Move> getMovesList() {
      return moves_;
    }
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    public java.util.List<? extends pathserver.Pathserver.PlanReply.MoveOrBuilder> 
        getMovesOrBuilderList() {
      return moves_;
    }
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    public int getMovesCount() {
      return moves_.size();
    }
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    public pathserver.Pathserver.PlanReply.Move getMoves(int index) {
      return moves_.get(index);
    }
    /**
     * <pre>
     **
     * Series of moves that bring the robot from the initial state to the
     * target state without impacting any obstacles.
     * </pre>
     *
     * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
     */
    public pathserver.Pathserver.PlanReply.MoveOrBuilder getMovesOrBuilder(
        int index) {
      return moves_.get(index);
    }

    public static final int WAYPOINTS_FIELD_NUMBER = 2;
    private java.util.List<pathserver.Pathserver.State> waypoints_;
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    public java.util.List<pathserver.Pathserver.State> getWaypointsList() {
      return waypoints_;
    }
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    public java.util.List<? extends pathserver.Pathserver.StateOrBuilder> 
        getWaypointsOrBuilderList() {
      return waypoints_;
    }
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    public int getWaypointsCount() {
      return waypoints_.size();
    }
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    public pathserver.Pathserver.State getWaypoints(int index) {
      return waypoints_.get(index);
    }
    /**
     * <pre>
     **
     * Series of intermediate robot states (waypoints) that were generated
     * by the planner.
     * The first state is the initial one, and the last state is the goal state
     * reached by the planner. The last state should be checked for goal
     * tolerance satisfaction.
     * </pre>
     *
     * <code>repeated .pathserver.State waypoints = 2;</code>
     */
    public pathserver.Pathserver.StateOrBuilder getWaypointsOrBuilder(
        int index) {
      return waypoints_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < moves_.size(); i++) {
        output.writeMessage(1, moves_.get(i));
      }
      for (int i = 0; i < waypoints_.size(); i++) {
        output.writeMessage(2, waypoints_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < moves_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, moves_.get(i));
      }
      for (int i = 0; i < waypoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, waypoints_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pathserver.Pathserver.PlanReply)) {
        return super.equals(obj);
      }
      pathserver.Pathserver.PlanReply other = (pathserver.Pathserver.PlanReply) obj;

      boolean result = true;
      result = result && getMovesList()
          .equals(other.getMovesList());
      result = result && getWaypointsList()
          .equals(other.getWaypointsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMovesCount() > 0) {
        hash = (37 * hash) + MOVES_FIELD_NUMBER;
        hash = (53 * hash) + getMovesList().hashCode();
      }
      if (getWaypointsCount() > 0) {
        hash = (37 * hash) + WAYPOINTS_FIELD_NUMBER;
        hash = (53 * hash) + getWaypointsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pathserver.Pathserver.PlanReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pathserver.Pathserver.PlanReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pathserver.Pathserver.PlanReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Message containing the planning result.
     * </pre>
     *
     * Protobuf type {@code pathserver.PlanReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pathserver.PlanReply)
        pathserver.Pathserver.PlanReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pathserver.Pathserver.internal_static_pathserver_PlanReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pathserver.Pathserver.internal_static_pathserver_PlanReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pathserver.Pathserver.PlanReply.class, pathserver.Pathserver.PlanReply.Builder.class);
      }

      // Construct using pathserver.Pathserver.PlanReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMovesFieldBuilder();
          getWaypointsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (movesBuilder_ == null) {
          moves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          movesBuilder_.clear();
        }
        if (waypointsBuilder_ == null) {
          waypoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          waypointsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pathserver.Pathserver.internal_static_pathserver_PlanReply_descriptor;
      }

      public pathserver.Pathserver.PlanReply getDefaultInstanceForType() {
        return pathserver.Pathserver.PlanReply.getDefaultInstance();
      }

      public pathserver.Pathserver.PlanReply build() {
        pathserver.Pathserver.PlanReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pathserver.Pathserver.PlanReply buildPartial() {
        pathserver.Pathserver.PlanReply result = new pathserver.Pathserver.PlanReply(this);
        int from_bitField0_ = bitField0_;
        if (movesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            moves_ = java.util.Collections.unmodifiableList(moves_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.moves_ = moves_;
        } else {
          result.moves_ = movesBuilder_.build();
        }
        if (waypointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            waypoints_ = java.util.Collections.unmodifiableList(waypoints_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.waypoints_ = waypoints_;
        } else {
          result.waypoints_ = waypointsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pathserver.Pathserver.PlanReply) {
          return mergeFrom((pathserver.Pathserver.PlanReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pathserver.Pathserver.PlanReply other) {
        if (other == pathserver.Pathserver.PlanReply.getDefaultInstance()) return this;
        if (movesBuilder_ == null) {
          if (!other.moves_.isEmpty()) {
            if (moves_.isEmpty()) {
              moves_ = other.moves_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMovesIsMutable();
              moves_.addAll(other.moves_);
            }
            onChanged();
          }
        } else {
          if (!other.moves_.isEmpty()) {
            if (movesBuilder_.isEmpty()) {
              movesBuilder_.dispose();
              movesBuilder_ = null;
              moves_ = other.moves_;
              bitField0_ = (bitField0_ & ~0x00000001);
              movesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMovesFieldBuilder() : null;
            } else {
              movesBuilder_.addAllMessages(other.moves_);
            }
          }
        }
        if (waypointsBuilder_ == null) {
          if (!other.waypoints_.isEmpty()) {
            if (waypoints_.isEmpty()) {
              waypoints_ = other.waypoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWaypointsIsMutable();
              waypoints_.addAll(other.waypoints_);
            }
            onChanged();
          }
        } else {
          if (!other.waypoints_.isEmpty()) {
            if (waypointsBuilder_.isEmpty()) {
              waypointsBuilder_.dispose();
              waypointsBuilder_ = null;
              waypoints_ = other.waypoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
              waypointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWaypointsFieldBuilder() : null;
            } else {
              waypointsBuilder_.addAllMessages(other.waypoints_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pathserver.Pathserver.PlanReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pathserver.Pathserver.PlanReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pathserver.Pathserver.PlanReply.Move> moves_ =
        java.util.Collections.emptyList();
      private void ensureMovesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          moves_ = new java.util.ArrayList<pathserver.Pathserver.PlanReply.Move>(moves_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.PlanReply.Move, pathserver.Pathserver.PlanReply.Move.Builder, pathserver.Pathserver.PlanReply.MoveOrBuilder> movesBuilder_;

      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public java.util.List<pathserver.Pathserver.PlanReply.Move> getMovesList() {
        if (movesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(moves_);
        } else {
          return movesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public int getMovesCount() {
        if (movesBuilder_ == null) {
          return moves_.size();
        } else {
          return movesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.Move getMoves(int index) {
        if (movesBuilder_ == null) {
          return moves_.get(index);
        } else {
          return movesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder setMoves(
          int index, pathserver.Pathserver.PlanReply.Move value) {
        if (movesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovesIsMutable();
          moves_.set(index, value);
          onChanged();
        } else {
          movesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder setMoves(
          int index, pathserver.Pathserver.PlanReply.Move.Builder builderForValue) {
        if (movesBuilder_ == null) {
          ensureMovesIsMutable();
          moves_.set(index, builderForValue.build());
          onChanged();
        } else {
          movesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder addMoves(pathserver.Pathserver.PlanReply.Move value) {
        if (movesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovesIsMutable();
          moves_.add(value);
          onChanged();
        } else {
          movesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder addMoves(
          int index, pathserver.Pathserver.PlanReply.Move value) {
        if (movesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMovesIsMutable();
          moves_.add(index, value);
          onChanged();
        } else {
          movesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder addMoves(
          pathserver.Pathserver.PlanReply.Move.Builder builderForValue) {
        if (movesBuilder_ == null) {
          ensureMovesIsMutable();
          moves_.add(builderForValue.build());
          onChanged();
        } else {
          movesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder addMoves(
          int index, pathserver.Pathserver.PlanReply.Move.Builder builderForValue) {
        if (movesBuilder_ == null) {
          ensureMovesIsMutable();
          moves_.add(index, builderForValue.build());
          onChanged();
        } else {
          movesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder addAllMoves(
          java.lang.Iterable<? extends pathserver.Pathserver.PlanReply.Move> values) {
        if (movesBuilder_ == null) {
          ensureMovesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, moves_);
          onChanged();
        } else {
          movesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder clearMoves() {
        if (movesBuilder_ == null) {
          moves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          movesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public Builder removeMoves(int index) {
        if (movesBuilder_ == null) {
          ensureMovesIsMutable();
          moves_.remove(index);
          onChanged();
        } else {
          movesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.Move.Builder getMovesBuilder(
          int index) {
        return getMovesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.MoveOrBuilder getMovesOrBuilder(
          int index) {
        if (movesBuilder_ == null) {
          return moves_.get(index);  } else {
          return movesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public java.util.List<? extends pathserver.Pathserver.PlanReply.MoveOrBuilder> 
           getMovesOrBuilderList() {
        if (movesBuilder_ != null) {
          return movesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(moves_);
        }
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.Move.Builder addMovesBuilder() {
        return getMovesFieldBuilder().addBuilder(
            pathserver.Pathserver.PlanReply.Move.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public pathserver.Pathserver.PlanReply.Move.Builder addMovesBuilder(
          int index) {
        return getMovesFieldBuilder().addBuilder(
            index, pathserver.Pathserver.PlanReply.Move.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Series of moves that bring the robot from the initial state to the
       * target state without impacting any obstacles.
       * </pre>
       *
       * <code>repeated .pathserver.PlanReply.Move moves = 1;</code>
       */
      public java.util.List<pathserver.Pathserver.PlanReply.Move.Builder> 
           getMovesBuilderList() {
        return getMovesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.PlanReply.Move, pathserver.Pathserver.PlanReply.Move.Builder, pathserver.Pathserver.PlanReply.MoveOrBuilder> 
          getMovesFieldBuilder() {
        if (movesBuilder_ == null) {
          movesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pathserver.Pathserver.PlanReply.Move, pathserver.Pathserver.PlanReply.Move.Builder, pathserver.Pathserver.PlanReply.MoveOrBuilder>(
                  moves_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          moves_ = null;
        }
        return movesBuilder_;
      }

      private java.util.List<pathserver.Pathserver.State> waypoints_ =
        java.util.Collections.emptyList();
      private void ensureWaypointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          waypoints_ = new java.util.ArrayList<pathserver.Pathserver.State>(waypoints_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> waypointsBuilder_;

      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public java.util.List<pathserver.Pathserver.State> getWaypointsList() {
        if (waypointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(waypoints_);
        } else {
          return waypointsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public int getWaypointsCount() {
        if (waypointsBuilder_ == null) {
          return waypoints_.size();
        } else {
          return waypointsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public pathserver.Pathserver.State getWaypoints(int index) {
        if (waypointsBuilder_ == null) {
          return waypoints_.get(index);
        } else {
          return waypointsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder setWaypoints(
          int index, pathserver.Pathserver.State value) {
        if (waypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaypointsIsMutable();
          waypoints_.set(index, value);
          onChanged();
        } else {
          waypointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder setWaypoints(
          int index, pathserver.Pathserver.State.Builder builderForValue) {
        if (waypointsBuilder_ == null) {
          ensureWaypointsIsMutable();
          waypoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          waypointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder addWaypoints(pathserver.Pathserver.State value) {
        if (waypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaypointsIsMutable();
          waypoints_.add(value);
          onChanged();
        } else {
          waypointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder addWaypoints(
          int index, pathserver.Pathserver.State value) {
        if (waypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaypointsIsMutable();
          waypoints_.add(index, value);
          onChanged();
        } else {
          waypointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder addWaypoints(
          pathserver.Pathserver.State.Builder builderForValue) {
        if (waypointsBuilder_ == null) {
          ensureWaypointsIsMutable();
          waypoints_.add(builderForValue.build());
          onChanged();
        } else {
          waypointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder addWaypoints(
          int index, pathserver.Pathserver.State.Builder builderForValue) {
        if (waypointsBuilder_ == null) {
          ensureWaypointsIsMutable();
          waypoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          waypointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder addAllWaypoints(
          java.lang.Iterable<? extends pathserver.Pathserver.State> values) {
        if (waypointsBuilder_ == null) {
          ensureWaypointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, waypoints_);
          onChanged();
        } else {
          waypointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder clearWaypoints() {
        if (waypointsBuilder_ == null) {
          waypoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          waypointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public Builder removeWaypoints(int index) {
        if (waypointsBuilder_ == null) {
          ensureWaypointsIsMutable();
          waypoints_.remove(index);
          onChanged();
        } else {
          waypointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public pathserver.Pathserver.State.Builder getWaypointsBuilder(
          int index) {
        return getWaypointsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public pathserver.Pathserver.StateOrBuilder getWaypointsOrBuilder(
          int index) {
        if (waypointsBuilder_ == null) {
          return waypoints_.get(index);  } else {
          return waypointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public java.util.List<? extends pathserver.Pathserver.StateOrBuilder> 
           getWaypointsOrBuilderList() {
        if (waypointsBuilder_ != null) {
          return waypointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(waypoints_);
        }
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public pathserver.Pathserver.State.Builder addWaypointsBuilder() {
        return getWaypointsFieldBuilder().addBuilder(
            pathserver.Pathserver.State.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public pathserver.Pathserver.State.Builder addWaypointsBuilder(
          int index) {
        return getWaypointsFieldBuilder().addBuilder(
            index, pathserver.Pathserver.State.getDefaultInstance());
      }
      /**
       * <pre>
       **
       * Series of intermediate robot states (waypoints) that were generated
       * by the planner.
       * The first state is the initial one, and the last state is the goal state
       * reached by the planner. The last state should be checked for goal
       * tolerance satisfaction.
       * </pre>
       *
       * <code>repeated .pathserver.State waypoints = 2;</code>
       */
      public java.util.List<pathserver.Pathserver.State.Builder> 
           getWaypointsBuilderList() {
        return getWaypointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder> 
          getWaypointsFieldBuilder() {
        if (waypointsBuilder_ == null) {
          waypointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pathserver.Pathserver.State, pathserver.Pathserver.State.Builder, pathserver.Pathserver.StateOrBuilder>(
                  waypoints_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          waypoints_ = null;
        }
        return waypointsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:pathserver.PlanReply)
    }

    // @@protoc_insertion_point(class_scope:pathserver.PlanReply)
    private static final pathserver.Pathserver.PlanReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pathserver.Pathserver.PlanReply();
    }

    public static pathserver.Pathserver.PlanReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlanReply>
        PARSER = new com.google.protobuf.AbstractParser<PlanReply>() {
      public PlanReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlanReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlanReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlanReply> getParserForType() {
      return PARSER;
    }

    public pathserver.Pathserver.PlanReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pathserver_State_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pathserver_State_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pathserver_PlanRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pathserver_PlanRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pathserver_PlanRequest_Obstacle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pathserver_PlanRequest_Obstacle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pathserver_PlanReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pathserver_PlanReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pathserver_PlanReply_Move_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pathserver_PlanReply_Move_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020pathserver.proto\022\npathserver\032\036google/p" +
      "rotobuf/wrappers.proto\",\n\005State\022\t\n\001x\030\001 \001" +
      "(\001\022\t\n\001y\030\002 \001(\001\022\r\n\005theta\030\003 \001(\001\"\253\001\n\013PlanReq" +
      "uest\0223\n\tobstacles\030\001 \003(\0132 .pathserver.Pla" +
      "nRequest.Obstacle\022\"\n\007current\030\002 \001(\0132\021.pat" +
      "hserver.State\022!\n\006target\030\003 \001(\0132\021.pathserv" +
      "er.State\032 \n\010Obstacle\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001" +
      "(\005\"\340\001\n\tPlanReply\022)\n\005moves\030\001 \003(\0132\032.pathse" +
      "rver.PlanReply.Move\022$\n\twaypoints\030\002 \003(\0132\021" +
      ".pathserver.State\032\201\001\n\004Move\0227\n\tdirection\030",
      "\001 \001(\0162$.pathserver.PlanReply.Move.Direct" +
      "ion\022\020\n\010distance\030\002 \001(\001\".\n\tDirection\022\010\n\004LE" +
      "FT\020\000\022\014\n\010STRAIGHT\020\001\022\t\n\005RIGHT\020\0022\202\001\n\nPathSe" +
      "rver\0228\n\004Plan\022\027.pathserver.PlanRequest\032\025." +
      "pathserver.PlanReply\"\000\022:\n\007IsValid\022\021.path" +
      "server.State\032\032.google.protobuf.BoolValue" +
      "\"\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_pathserver_State_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pathserver_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pathserver_State_descriptor,
        new java.lang.String[] { "X", "Y", "Theta", });
    internal_static_pathserver_PlanRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pathserver_PlanRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pathserver_PlanRequest_descriptor,
        new java.lang.String[] { "Obstacles", "Current", "Target", });
    internal_static_pathserver_PlanRequest_Obstacle_descriptor =
      internal_static_pathserver_PlanRequest_descriptor.getNestedTypes().get(0);
    internal_static_pathserver_PlanRequest_Obstacle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pathserver_PlanRequest_Obstacle_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_pathserver_PlanReply_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pathserver_PlanReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pathserver_PlanReply_descriptor,
        new java.lang.String[] { "Moves", "Waypoints", });
    internal_static_pathserver_PlanReply_Move_descriptor =
      internal_static_pathserver_PlanReply_descriptor.getNestedTypes().get(0);
    internal_static_pathserver_PlanReply_Move_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pathserver_PlanReply_Move_descriptor,
        new java.lang.String[] { "Direction", "Distance", });
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
